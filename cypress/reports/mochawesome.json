{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-08T23:12:59.975Z",
    "end": "2021-07-08T23:14:19.459Z",
    "duration": 79484,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8a79a62a-8786-4510-beed-8e3ad349bc4d",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7cb0aab-2f24-4b99-af9c-e1763bbbe7b1",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5bffb16e-9543-4447-871d-82db6455a643",
              "parentUUID": "a7cb0aab-2f24-4b99-af9c-e1763bbbe7b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bffb16e-9543-4447-871d-82db6455a643"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "3d2e583f-2c67-4fe1-a9ed-4ba5da45a3df",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "4ca6ac92-5d51-40c2-a1aa-0dfdb8b98918",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "948ad008-57f2-41bd-9501-56be74d19977",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d41d3e24-4ea0-40f2-9200-af52729b38e4",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b5680915-0b73-422a-ba2a-cfb67a09b7f4",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8667ce15-c97d-4586-bf73-3227c72d42c3",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "cd62aea5-a573-4ddb-bbd1-5a6848efaf1e",
              "parentUUID": "2ee4d5ab-d7b7-4303-adf2-14d82b1a94fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d2e583f-2c67-4fe1-a9ed-4ba5da45a3df",
            "4ca6ac92-5d51-40c2-a1aa-0dfdb8b98918",
            "948ad008-57f2-41bd-9501-56be74d19977",
            "d41d3e24-4ea0-40f2-9200-af52729b38e4",
            "b5680915-0b73-422a-ba2a-cfb67a09b7f4",
            "8667ce15-c97d-4586-bf73-3227c72d42c3",
            "cd62aea5-a573-4ddb-bbd1-5a6848efaf1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 708,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6338a823-62af-4216-aaa4-ee3d8015b459",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4d78eb7a-ffb6-498f-b65c-752c30da3620",
              "parentUUID": "6338a823-62af-4216-aaa4-ee3d8015b459",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "25ae1c85-40bf-402f-9121-97fb8ae400a3",
              "parentUUID": "6338a823-62af-4216-aaa4-ee3d8015b459",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d78eb7a-ffb6-498f-b65c-752c30da3620",
            "25ae1c85-40bf-402f-9121-97fb8ae400a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 225,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ea2e2192-b791-48bb-8709-1678563e1bb4",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ea478faf-4fcb-49ed-ba9d-605852b6918d",
              "parentUUID": "ea2e2192-b791-48bb-8709-1678563e1bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "722c0160-312f-4393-a6e4-a25c3b2a976f",
              "parentUUID": "ea2e2192-b791-48bb-8709-1678563e1bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "69a91e33-ea5e-4db1-81c2-f7d3dd3d93f1",
              "parentUUID": "ea2e2192-b791-48bb-8709-1678563e1bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "fdfc2c0c-5549-4a23-8eea-90a544625599",
              "parentUUID": "ea2e2192-b791-48bb-8709-1678563e1bb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea478faf-4fcb-49ed-ba9d-605852b6918d",
            "722c0160-312f-4393-a6e4-a25c3b2a976f",
            "69a91e33-ea5e-4db1-81c2-f7d3dd3d93f1",
            "fdfc2c0c-5549-4a23-8eea-90a544625599"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "97c8b437-e346-4596-bfd5-2a3a496dfa4d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "37a20d10-1335-435e-842f-12d23518757d",
              "parentUUID": "97c8b437-e346-4596-bfd5-2a3a496dfa4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "9d67050d-e8b2-4431-81be-ee19d3623a3b",
              "parentUUID": "97c8b437-e346-4596-bfd5-2a3a496dfa4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37a20d10-1335-435e-842f-12d23518757d",
            "9d67050d-e8b2-4431-81be-ee19d3623a3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 458,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59fbd6f6-7a7a-4f1f-b4ae-a3688b8bff76",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f2955f59-9aae-403e-9e9e-eb935a6581e3",
              "parentUUID": "59fbd6f6-7a7a-4f1f-b4ae-a3688b8bff76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "d7663ea7-421f-43c2-bab4-1f7ef9456fb6",
              "parentUUID": "59fbd6f6-7a7a-4f1f-b4ae-a3688b8bff76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2955f59-9aae-403e-9e9e-eb935a6581e3",
            "d7663ea7-421f-43c2-bab4-1f7ef9456fb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5eccf82d-4a38-43bb-9a54-4d7554aca8d6",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "c20e58c9-0087-4561-a3ce-9a8171ff3071",
              "parentUUID": "5eccf82d-4a38-43bb-9a54-4d7554aca8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "01f8ce6b-c420-4af9-9875-2ee12533bdae",
              "parentUUID": "5eccf82d-4a38-43bb-9a54-4d7554aca8d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c20e58c9-0087-4561-a3ce-9a8171ff3071",
            "01f8ce6b-c420-4af9-9875-2ee12533bdae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9649,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a0e7ee0-92f9-44be-b0d9-bbe69a3990f7",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "2ff810aa-c0aa-480d-9b79-901535a744b4",
              "parentUUID": "8a0e7ee0-92f9-44be-b0d9-bbe69a3990f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "7d6d9ed9-5aec-4fbd-9f9a-bc6b3c403d54",
              "parentUUID": "8a0e7ee0-92f9-44be-b0d9-bbe69a3990f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "bd889ef8-f394-43e8-8f84-8eb779b3d254",
              "parentUUID": "8a0e7ee0-92f9-44be-b0d9-bbe69a3990f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ff810aa-c0aa-480d-9b79-901535a744b4",
            "7d6d9ed9-5aec-4fbd-9f9a-bc6b3c403d54",
            "bd889ef8-f394-43e8-8f84-8eb779b3d254"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12647,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c766065-d376-4fee-9f90-38b3c13de060",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "0e3271e6-15f6-48f8-85b2-27d75e3c505e",
              "parentUUID": "8c766065-d376-4fee-9f90-38b3c13de060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "827b1f4f-4b24-40d1-a6d1-a39dc3f64642",
              "parentUUID": "8c766065-d376-4fee-9f90-38b3c13de060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "b6ec52a2-3b47-456d-9f5b-32ff196e28b2",
              "parentUUID": "8c766065-d376-4fee-9f90-38b3c13de060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e998503f-dfa4-44d4-8362-1a32d4d8b728",
              "parentUUID": "8c766065-d376-4fee-9f90-38b3c13de060",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e3271e6-15f6-48f8-85b2-27d75e3c505e",
            "827b1f4f-4b24-40d1-a6d1-a39dc3f64642",
            "b6ec52a2-3b47-456d-9f5b-32ff196e28b2",
            "e998503f-dfa4-44d4-8362-1a32d4d8b728"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dbbdf099-f9b6-47f4-a492-c5e0935a9bcd",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "43850eee-5221-440f-aae5-83bc833140e7",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4229,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f346777f-f58c-4102-bec7-73e74dc686cd",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5340ac78-aa26-47b1-9183-efa6bb11841c",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "39e98968-0875-4e8d-a73f-ed5ad8a3a569",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4252,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "74d9ee12-ef05-4af5-86bc-b3612ebd7758",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4257,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc0ea14b-0b15-4d41-9512-7ec9579741fe",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a258db1c-4a44-490b-b2ec-30b105ef6410",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4251,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c9a9d077-ba50-4a7f-9001-59591c2bd346",
              "parentUUID": "e67bd704-e50f-4c31-9a40-2ead11ebdfb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dbbdf099-f9b6-47f4-a492-c5e0935a9bcd",
            "43850eee-5221-440f-aae5-83bc833140e7",
            "f346777f-f58c-4102-bec7-73e74dc686cd",
            "5340ac78-aa26-47b1-9183-efa6bb11841c",
            "39e98968-0875-4e8d-a73f-ed5ad8a3a569",
            "74d9ee12-ef05-4af5-86bc-b3612ebd7758",
            "dc0ea14b-0b15-4d41-9512-7ec9579741fe",
            "a258db1c-4a44-490b-b2ec-30b105ef6410",
            "c9a9d077-ba50-4a7f-9001-59591c2bd346"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38196,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4e26430-ca02-4623-a149-9888fa944ae8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d1cd3db3-5a9a-4712-8145-2b0d9159619c",
              "parentUUID": "e4e26430-ca02-4623-a149-9888fa944ae8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00269c2e-f232-4f81-a3a4-a0ee77740969",
              "parentUUID": "e4e26430-ca02-4623-a149-9888fa944ae8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4273,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45015/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45015/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45015/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45015/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45015/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45015/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9e5abb68-a5cf-4271-ae68-b5ea4b41e77f",
              "parentUUID": "e4e26430-ca02-4623-a149-9888fa944ae8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d1cd3db3-5a9a-4712-8145-2b0d9159619c",
            "00269c2e-f232-4f81-a3a4-a0ee77740969",
            "9e5abb68-a5cf-4271-ae68-b5ea4b41e77f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12708,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b57512b2-936c-4d54-ad70-f41cc17c3931",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 339,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45015/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45015/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45015/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45015/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45015/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45015/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45015/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b2af809c-b9d6-4fb6-a3cb-fec3ca9dfe74",
              "parentUUID": "b57512b2-936c-4d54-ad70-f41cc17c3931",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 254,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45015/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45015/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45015/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45015/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45015/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45015/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45015/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45015/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45015/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45015/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45015/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45015/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "06285124-ed25-4392-947a-c45c827c1269",
              "parentUUID": "b57512b2-936c-4d54-ad70-f41cc17c3931",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b2af809c-b9d6-4fb6-a3cb-fec3ca9dfe74",
            "06285124-ed25-4392-947a-c45c827c1269"
          ],
          "pending": [],
          "skipped": [],
          "duration": 593,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}